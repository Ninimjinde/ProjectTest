// <auto-generated />
using System;
using ALE.TimeRegistration.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ALE.TimeRegistration.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SenderId", "ReceiverId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("TaskId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            SenderId = new Guid("b92e79e5-bde7-4c85-9d85-cbe405b599a9"),
                            ReceiverId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Id = new Guid("00000000-0000-0000-0000-000000000060"),
                            TaskId = new Guid("83ce5bec-f859-4425-bb53-56de4502c2a9"),
                            Text = "Please update your work asap."
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000050"),
                            TaskId = new Guid("84985336-8b0f-4fcc-883f-affa41175ef2")
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9468ac7-468b-4ad2-ad2f-15f42364481a"),
                            Name = "Toyota Motor"
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("WorkTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Email = "aboynamedsue@JCash.com",
                            LastName = "Cash",
                            Name = "Johnny",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("b92e79e5-bde7-4c85-9d85-cbe405b599a9"),
                            Email = "EchtElkeKant@hotmail.com",
                            LastName = "Kant",
                            Name = "Elke",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("e0146a2e-cbec-42cf-8a3c-cfe63b4743e4"),
                            Email = "Ialwayswin@gmail.com",
                            LastName = "Pot",
                            Name = "Jack",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("a70ba158-7d24-4996-9729-c04645e4123c"),
                            Email = "ErnaVanvoren@hotmail.com",
                            LastName = "Vanvoren",
                            Name = "Erna",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("5f439b90-1504-470e-a403-b7d98fe5a819"),
                            Email = "RogerDoeniemee@telenet.be",
                            LastName = "Vangenechte",
                            Name = "Roger",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("cfe86e67-56e5-4dc6-9ff7-dca5b4b8343f"),
                            Email = "CharlesDurue@hotmail.com",
                            LastName = "Verstraete",
                            Name = "Karel",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("9764704d-fbc8-4c4f-9e76-998e927d446e"),
                            Email = "Katringring@skynet.be",
                            LastName = "Vanbelleghem",
                            Name = "Katleen",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("b3b83cb1-2b33-4629-95ea-e2a060f172c1"),
                            Email = "SnelnEddy@hotmail.com",
                            LastName = "Guapo",
                            Name = "Edwardo",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("bb60dc0a-02dd-4357-9973-9cb54cb837ef"),
                            Email = "Andy123@gmail.com",
                            LastName = "Degught",
                            Name = "Andy",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("254def70-50a0-40de-a77a-ab2c2591bb89"),
                            Email = "IloveyouTomorrow@hotmail.com",
                            LastName = "Demain",
                            Name = "Annie",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("f84da3ff-9cc6-49c5-9904-15e431feffe6"),
                            Email = "Satchel@steelpanther.com",
                            LastName = "Parrish",
                            Name = "Russ",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("87395ea7-a64c-4878-8f09-c55564d4db12"),
                            Email = "DePijpVanMaarten@gmail.com",
                            LastName = "Pijpers",
                            Name = "Maarten",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("67859443-f004-4779-bfb0-3ad2cfa6a153"),
                            Email = "EdwardLeCanard@hotmail.com",
                            LastName = "Vaneende",
                            Name = "Edward",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("1e62ec6c-0f76-4a30-b5c5-15690658930f"),
                            Email = "DeYoeri@gmail.com",
                            LastName = "Declerk",
                            Name = "Yoeri",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("66d7e6a2-404e-4919-b032-abf64cfe691f"),
                            Email = "CalmingCamille@telenet.be",
                            LastName = "Thee",
                            Name = "Camille",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00748570-86f3-42c3-a358-8ea38c706cb8"),
                            Email = "Thebestginger@qotsa.com",
                            LastName = "Homme",
                            Name = "Josh",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("30a49cd6-9144-40f0-816c-4b1d7a0a766a"),
                            Email = "Zwaffelaere@gmail.com",
                            LastName = "Uytebroeck",
                            Name = "Piet",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("a9ac8612-f8b7-4344-9042-875b1b916e1a"),
                            Email = "SterkeJan33@pandora.be",
                            LastName = "Lefort",
                            Name = "Jan",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("8bc19dd0-6829-49b6-b084-e742cc6403c0"),
                            Email = "RietjeGessof@hotmail.com",
                            LastName = "Gessof",
                            Name = "Rita",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("67859443-f004-4779-bfb0-3ad2cfa6a154"),
                            Email = "willywilly@thescabs.be",
                            LastName = "Lambregt",
                            Name = "Willy",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("1e62ec6c-0f76-4a30-b5c5-15690658930d"),
                            Email = "PescadoLover@skynet.be",
                            LastName = "Vervis",
                            Name = "Kelly",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("66d7e6a2-404e-4919-b032-abf64cfe691d"),
                            Email = "TomVanmarcke@gmail.com",
                            LastName = "Vantomme",
                            Name = "Marc",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("532d63b6-f0e2-42dd-a205-8daa5548562f"),
                            Email = "Loewiloewie@hotmail.com",
                            LastName = "Decruy",
                            Name = "Louis",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("6cac4bc5-293e-4b8a-836c-04f46a681b2f"),
                            Email = "Giezijtem@skynet.be",
                            LastName = "Emnie",
                            Name = "Ben",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("0d505c28-9d9a-4252-a212-e8184f1720e0"),
                            Email = "ConnieBeter@gmail.com",
                            LastName = "Moeleker",
                            Name = "Connie",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("88328685-37dc-45d7-aef0-a7095dbbf9e1"),
                            Email = "GezondePeter@telenet.be",
                            LastName = "Celie",
                            Name = "Peter",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("2d2168e4-f8ff-4809-a3cb-0cac07d05fb0"),
                            Email = "Bennernie@skynet.be",
                            LastName = "Thuys",
                            Name = "Benny",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("c3120458-e925-4701-a1c2-f96cd89e8780"),
                            Email = "Thebestbusker@london.com",
                            LastName = "Cole",
                            Name = "Cam",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("8ce255f7-bb90-4cfa-b088-7a1a9c22b1ef"),
                            Email = "CoronaTopper@gmail.com",
                            LastName = "Root",
                            Name = "Claude",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("131de448-db99-4b95-b14e-66b914db725e"),
                            Email = "rapgewoon@hotmail.com",
                            LastName = "Wenne",
                            Name = "Eve",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("84985336-8b0f-4fcc-883f-affa41175ef2")
                        },
                        new
                        {
                            Id = new Guid("83ce5bec-f859-4425-bb53-56de4502c2a9")
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.UserTask", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("UserProject");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000001"),
                            TaskId = new Guid("84985336-8b0f-4fcc-883f-affa41175ef2")
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Message", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ALE.TimeRegistration.Core.Entities.User", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ALE.TimeRegistration.Core.Entities.Task", "Task")
                        .WithMany("Messages")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Picture", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.Task", "Task")
                        .WithMany("Pictures")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Task", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.UserTask", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.Task", "Task")
                        .WithMany("TaskUsers")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALE.TimeRegistration.Core.Entities.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
