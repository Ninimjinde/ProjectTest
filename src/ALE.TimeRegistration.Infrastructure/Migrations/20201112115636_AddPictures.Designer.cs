// <auto-generated />
using System;
using ALE.TimeRegistration.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ALE.TimeRegistration.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201112115636_AddPictures")]
    partial class AddPictures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TaskId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000400"),
                            ReceiverId = new Guid("00000000-0000-0000-0000-000000000006"),
                            SenderId = new Guid("00000000-0000-0000-0000-000000000001"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000200"),
                            Text = "Please update your work asap."
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000401"),
                            ReceiverId = new Guid("00000000-0000-0000-0000-000000000001"),
                            SenderId = new Guid("00000000-0000-0000-0000-000000000006"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000201"),
                            Text = "Can I get more info about the task please?"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000402"),
                            ReceiverId = new Guid("00000000-0000-0000-0000-000000000007"),
                            SenderId = new Guid("00000000-0000-0000-0000-000000000002"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000202"),
                            Text = "Please do this asap."
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000403"),
                            ReceiverId = new Guid("00000000-0000-0000-0000-000000000001"),
                            SenderId = new Guid("00000000-0000-0000-0000-000000000006"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000200"),
                            Text = "What should I do when I finish?"
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000300"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000200")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000301"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000201")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000302"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000201")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000303"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000202")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000304"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000203")
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000100"),
                            Name = "Toyota Motor"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000101"),
                            Name = "Colruyt"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000102"),
                            Name = "Engie Electrabel"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000103"),
                            Name = "Janssen Pharmaceutica"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000104"),
                            Name = "Total Belgium"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000105"),
                            Name = "BASF Antwerpen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000106"),
                            Name = "Delhaize De Leeuw"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000107"),
                            Name = "Volvo Car Belgium"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000108"),
                            Name = "ArcelorMittal Belgium"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000109"),
                            Name = "Mastercard Europe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000110"),
                            Name = "Proximus"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000111"),
                            Name = "AXA Belgium"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000112"),
                            Name = "Allianz Benelux"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000113"),
                            Name = "Daikin Europe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000114"),
                            Name = "bpost"
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("WorkTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000200"),
                            Info = "Create API Items",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000100"),
                            TaskName = "Create API",
                            UploadDate = new DateTime(2018, 10, 14, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 1, 18, 20, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000201"),
                            Info = "Fix issues Items API",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000100"),
                            TaskName = "API issues",
                            UploadDate = new DateTime(2018, 10, 15, 11, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 2, 19, 28, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000202"),
                            Info = "Create new properties Item object",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000100"),
                            TaskName = "Create properties",
                            UploadDate = new DateTime(2018, 10, 18, 9, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 0, 28, 30, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000203"),
                            Info = "Link Item to new API vendor",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000100"),
                            TaskName = "API vendor link",
                            UploadDate = new DateTime(2018, 10, 19, 8, 35, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 0, 8, 40, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000204"),
                            Info = "Migrate objects to database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000101"),
                            TaskName = "migrate objects",
                            UploadDate = new DateTime(2019, 8, 14, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 2, 35, 50, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000205"),
                            Info = "Create all API's for website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000101"),
                            TaskName = "create API's",
                            UploadDate = new DateTime(2019, 8, 15, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 4, 30, 20, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000206"),
                            Info = "Create full working website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000101"),
                            TaskName = "Website",
                            UploadDate = new DateTime(2019, 9, 20, 10, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 21, 44, 30, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000207"),
                            Info = "Finish website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000101"),
                            TaskName = "finish website",
                            UploadDate = new DateTime(2019, 9, 23, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 3, 18, 10, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000208"),
                            Info = "Automate pricing and promo",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000101"),
                            TaskName = "automate",
                            UploadDate = new DateTime(2019, 10, 2, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 5, 5, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000209"),
                            Info = "Upload data for demo",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000102"),
                            TaskName = "demodata",
                            UploadDate = new DateTime(2020, 2, 20, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 0, 31, 50, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000210"),
                            Info = "Migrate data Electrabel to database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000102"),
                            TaskName = "migrate data",
                            UploadDate = new DateTime(2020, 2, 21, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 8, 41, 30, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000211"),
                            Info = "Fix issues website selling page",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000103"),
                            TaskName = "fix website issues",
                            UploadDate = new DateTime(2020, 5, 13, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 2, 15, 30, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000212"),
                            Info = "Rebuild itempage website and link new products",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000103"),
                            TaskName = "itempage",
                            UploadDate = new DateTime(2020, 5, 15, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 5, 7, 40, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000213"),
                            Info = "Automate selling process and work with new API's",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000103"),
                            TaskName = "automation",
                            UploadDate = new DateTime(2020, 5, 17, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 6, 39, 50, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000214"),
                            Info = "Finish all processes and link to website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000103"),
                            TaskName = "finish automation",
                            UploadDate = new DateTime(2020, 5, 18, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 4, 55, 10, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000215"),
                            Info = "Create new website and link to database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000104"),
                            TaskName = "create website",
                            UploadDate = new DateTime(2018, 3, 20, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 22, 10, 25, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000216"),
                            Info = "Update al items in database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000104"),
                            TaskName = "update items",
                            UploadDate = new DateTime(2018, 3, 25, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 1, 8, 41, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000217"),
                            Info = "Automate promo's and guid for admin",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000104"),
                            TaskName = "promo's",
                            UploadDate = new DateTime(2018, 3, 26, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 2, 1, 35, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000218"),
                            Info = "Upload data and create database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000105"),
                            TaskName = "upload data",
                            UploadDate = new DateTime(2018, 8, 14, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 3, 0, 12, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000219"),
                            Info = "Upload data and create database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000106"),
                            TaskName = "upload data",
                            UploadDate = new DateTime(2020, 7, 12, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 4, 47, 8, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000220"),
                            Info = "Link API's to new database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000106"),
                            TaskName = "link API's",
                            UploadDate = new DateTime(2020, 7, 13, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 0, 35, 38, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000221"),
                            Info = "Fix issues with order page on website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000107"),
                            TaskName = "order page",
                            UploadDate = new DateTime(2020, 10, 13, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 1, 26, 45, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000222"),
                            Info = "Create link order page and new billing page customer and automate proces",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000107"),
                            TaskName = "link order page",
                            UploadDate = new DateTime(2020, 10, 15, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 2, 45, 10, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000223"),
                            Info = "Fix issue billing page",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000107"),
                            TaskName = "issue billing",
                            UploadDate = new DateTime(2020, 10, 16, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 0, 51, 42, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000224"),
                            Info = "Create new order page for customers Europe",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000108"),
                            TaskName = "order page",
                            UploadDate = new DateTime(2019, 11, 5, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 1, 8, 42, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000225"),
                            Info = "Create API for database to link with order page",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000108"),
                            TaskName = "API orderpage",
                            UploadDate = new DateTime(2019, 11, 6, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 3, 6, 5, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000226"),
                            Info = "Create new page for customer portal",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000109"),
                            TaskName = "customer portal",
                            UploadDate = new DateTime(2019, 11, 8, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 2, 19, 8, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000227"),
                            Info = "Fix issues customer portal",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000109"),
                            TaskName = "issues customer portal",
                            UploadDate = new DateTime(2019, 11, 10, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 0, 20, 45, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000228"),
                            Info = "Create API Items and link to database",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000110"),
                            TaskName = "API items",
                            UploadDate = new DateTime(2020, 2, 10, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 3, 24, 6, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000229"),
                            Info = "Fix app issues for customer login page",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000110"),
                            TaskName = "app issues",
                            UploadDate = new DateTime(2019, 4, 8, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 2, 35, 41, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000230"),
                            Info = "Create full working website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000111"),
                            TaskName = "Website",
                            UploadDate = new DateTime(2020, 6, 20, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 7, 41, 20, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000231"),
                            Info = "Create full working website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000112"),
                            TaskName = "Website",
                            UploadDate = new DateTime(2019, 11, 15, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 10, 35, 41, 0)
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000232"),
                            Info = "Create full working website",
                            ProjectId = new Guid("00000000-0000-0000-0000-000000000113"),
                            TaskName = "Website",
                            UploadDate = new DateTime(2018, 10, 10, 8, 30, 12, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 11, 31, 50, 0)
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Email = "aboynamedsue@JCash.com",
                            LastName = "Cash",
                            Name = "Johnny",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Email = "EchtElkeKant@hotmail.com",
                            LastName = "Kant",
                            Name = "Elke",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Email = "Ialwayswin@gmail.com",
                            LastName = "Pot",
                            Name = "Jack",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Email = "ErnaVanvoren@hotmail.com",
                            LastName = "Vanvoren",
                            Name = "Erna",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Email = "RogerDoeniemee@telenet.be",
                            LastName = "Vangenechte",
                            Name = "Roger",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Email = "CharlesDurue@hotmail.com",
                            LastName = "Verstraete",
                            Name = "Karel",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Email = "Katringring@skynet.be",
                            LastName = "Vanbelleghem",
                            Name = "Katleen",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Email = "SnelnEddy@hotmail.com",
                            LastName = "Guapo",
                            Name = "Edwardo",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Email = "Andy123@gmail.com",
                            LastName = "Degught",
                            Name = "Andy",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Email = "IloveyouTomorrow@hotmail.com",
                            LastName = "Demain",
                            Name = "Annie",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            Email = "Satchel@steelpanther.com",
                            LastName = "Parrish",
                            Name = "Russ",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            Email = "DePijpVanMaarten@gmail.com",
                            LastName = "Pijpers",
                            Name = "Maarten",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            Email = "EdwardLeCanard@hotmail.com",
                            LastName = "Vaneende",
                            Name = "Edward",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            Email = "DeYoeri@gmail.com",
                            LastName = "Declerk",
                            Name = "Yoeri",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            Email = "CalmingCamille@telenet.be",
                            LastName = "Thee",
                            Name = "Camille",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            Email = "Thebestginger@qotsa.com",
                            LastName = "Homme",
                            Name = "Josh",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            Email = "Zwaffelaere@gmail.com",
                            LastName = "Uytebroeck",
                            Name = "Piet",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            Email = "SterkeJan33@pandora.be",
                            LastName = "Lefort",
                            Name = "Jan",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            Email = "RietjeGessof@hotmail.com",
                            LastName = "Gessof",
                            Name = "Rita",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000020"),
                            Email = "willywilly@thescabs.be",
                            LastName = "Lambregt",
                            Name = "Willy",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000021"),
                            Email = "PescadoLover@skynet.be",
                            LastName = "Vervis",
                            Name = "Kelly",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000022"),
                            Email = "TomVanmarcke@gmail.com",
                            LastName = "Vantomme",
                            Name = "Marc",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000023"),
                            Email = "Loewiloewie@hotmail.com",
                            LastName = "Decruy",
                            Name = "Louis",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000024"),
                            Email = "Giezijtem@skynet.be",
                            LastName = "Emnie",
                            Name = "Ben",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000025"),
                            Email = "ConnieBeter@gmail.com",
                            LastName = "Moeleker",
                            Name = "Connie",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000026"),
                            Email = "GezondePeter@telenet.be",
                            LastName = "Celie",
                            Name = "Peter",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000027"),
                            Email = "Bennernie@skynet.be",
                            LastName = "Thuys",
                            Name = "Benny",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000028"),
                            Email = "Thebestbusker@london.com",
                            LastName = "Cole",
                            Name = "Cam",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000029"),
                            Email = "CoronaTopper@gmail.com",
                            LastName = "Root",
                            Name = "Claude",
                            Password = "TimeReg2020"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000030"),
                            Email = "rapgewoon@hotmail.com",
                            LastName = "Wenne",
                            Name = "Eve",
                            Password = "TimeReg2020"
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.UserTask", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("UserTasks");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000006"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000200")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000006"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000201")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000007"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000202")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000008"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000203")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000008"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000204")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000009"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000205")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000010"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000206")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000011"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000207")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000011"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000208")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000011"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000209")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000015"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000210")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000016"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000211")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000017"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000212")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000020"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000213")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000020"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000214")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000021"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000215")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000021"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000216")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000021"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000217")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000022"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000218")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000023"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000219")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000024"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000220")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000024"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000221")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000025"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000223")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000017"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000224")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000025"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000225")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000026"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000226")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000027"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000227")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000028"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000228")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000029"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000229")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000030"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000230")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000015"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000231")
                        },
                        new
                        {
                            UserId = new Guid("00000000-0000-0000-0000-000000000030"),
                            TaskId = new Guid("00000000-0000-0000-0000-000000000232")
                        });
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Message", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ALE.TimeRegistration.Core.Entities.User", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ALE.TimeRegistration.Core.Entities.Task", "Task")
                        .WithMany("Messages")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Picture", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.Task", "Task")
                        .WithMany("Pictures")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Task", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.UserTask", b =>
                {
                    b.HasOne("ALE.TimeRegistration.Core.Entities.Task", "Task")
                        .WithMany("TaskUsers")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALE.TimeRegistration.Core.Entities.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.Task", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Pictures");

                    b.Navigation("TaskUsers");
                });

            modelBuilder.Entity("ALE.TimeRegistration.Core.Entities.User", b =>
                {
                    b.Navigation("ReceivedMessages");

                    b.Navigation("SendMessages");

                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
